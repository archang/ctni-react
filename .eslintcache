[{"C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\App.js":"1","C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\components\\login-button.js":"2","C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\components\\share.js":"3","C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\components\\storage.js":"4","C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\index.js":"5"},{"size":875,"mtime":1616277025088,"results":"6","hashOfConfig":"7"},{"size":1014,"mtime":1612909615187,"results":"8","hashOfConfig":"7"},{"size":2704,"mtime":1616277025091,"results":"9","hashOfConfig":"7"},{"size":5530,"mtime":1616277025092,"results":"10","hashOfConfig":"7"},{"size":761,"mtime":1612909615235,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1g6u83n",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\App.js",["23","24"],"C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\components\\login-button.js",[],"C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\components\\share.js",["25","26"],"import React, {Component, useEffect, useState} from 'react'\r\nimport  {sharedgrabbedarray}  from './studies.js'\r\nimport http from \"../http-common\";\r\nimport async from \"async\";\r\n\r\n\r\n\r\n\r\n\r\nfunction FeedbackForm() {\r\n    const search = window.location.search; // returns the URL query String\r\n    const Params = new URLSearchParams(search);\r\n\r\nconst IdFromURL = Params.get('arr');\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [comment, setComment] = useState('')\r\n    const [usergroup, setusergroup] = useState('')\r\n    const [groups,setgroups]=useState('')\r\n    let grr;\r\n\r\n    grr=IdFromURL\r\n    // let study_ID=\"Study_ID\";\r\n    // let study_Name=\"Study_Name\"\r\n    // let names=[]\r\n    // let id=[]\r\n    // for (let json in grr) {\r\n    //\r\n    //   id.push(json[study_ID])\r\n    //     names.push(json[study_Name])\r\n    //\r\n    // }\r\nuseEffect(() => {\r\n    fetch(\"/groups\").then(response =>\r\n        response.json().then(data => {\r\n          setgroups(data);\r\n        })\r\n    );\r\n  }, []);\r\n    var groupsgrabbed=groups\r\n    console.log(\"grps\",groupsgrabbed)\r\n\r\n console.log(\"nnn\", grr)\r\n  const submit = e => {\r\n      e.preventDefault()\r\n      console.log(\"email\", email)\r\n      console.log(\"usergroup\", usergroup)\r\n      var groupdata = []\r\n      groupdata.push(email)\r\n      groupdata.push(usergroup)\r\n      http.post(\"/email\", groupdata, {\r\n          headers: {\r\n              \"Content-Type\": \"application/json\",\r\n          }\r\n      });\r\n      if (email){\r\n      fetch(`https://hooks.zapier.com/hooks/catch/9665392/ongbdjr/`, {\r\n          method: 'POST',\r\n          body: JSON.stringify({email, comment, grr}),\r\n      })\r\n  }\r\n  }\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <label htmlFor=\"comment\">Your question or comment</label>\r\n      <textarea\r\n        name=\"comment\"\r\n        value={comment}\r\n        onChange={e => setComment(e.target.value)}\r\n        />\r\n      <br />\r\n      <label htmlFor=\"email\">User Email to share data with </label> <br />\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={email}\r\n        onChange={e => setEmail(e.target.value)}\r\n       />\r\n      <br />\r\n      <label htmlFor=\"usergroup\">User Group to share data with </label> <br />\r\n\r\n        <input\r\n        type=\"text\"\r\n        name=\"usergroup\"\r\n        value={usergroup}\r\n        onChange={e => setusergroup(e.target.value)}\r\n       />\r\n      <br />\r\n      <button type=\"submit\">Send it!</button>\r\n    </form>\r\n\r\n  )\r\n}\r\nexport default class share extends Component {\r\n\r\n  render() {\r\n\r\n\r\n\r\n    return (\r\n\r\n      <div>\r\n        <FeedbackForm />\r\n\r\n        <a href=\"http://localhost:3000/studies\" className=\"back-button\">Back to Studies</a>\r\n      </div>\r\n        )\r\n        }\r\n\r\n}","C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\components\\storage.js",["27","28","29","30"],"C:\\Users\\Nidhi\\PycharmProjects\\ctni-react\\src\\index.js",[],{"ruleId":"31","severity":1,"message":"32","line":2,"column":10,"nodeType":"33","messageId":"34","endLine":2,"endColumn":23},{"ruleId":"31","severity":1,"message":"35","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":22},{"ruleId":"31","severity":1,"message":"36","line":2,"column":10,"nodeType":"33","messageId":"34","endLine":2,"endColumn":28},{"ruleId":"31","severity":1,"message":"37","line":4,"column":8,"nodeType":"33","messageId":"34","endLine":4,"endColumn":13},{"ruleId":"31","severity":1,"message":"38","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":13},{"ruleId":"31","severity":1,"message":"39","line":199,"column":13,"nodeType":"33","messageId":"34","endLine":199,"endColumn":26},{"ruleId":"31","severity":1,"message":"40","line":199,"column":28,"nodeType":"33","messageId":"34","endLine":199,"endColumn":41},{"ruleId":"31","severity":1,"message":"41","line":199,"column":43,"nodeType":"33","messageId":"34","endLine":199,"endColumn":50},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'ProtectedRoute' is defined but never used.","'sharedgrabbedarray' is defined but never used.","'async' is defined but never used.","'axios' is defined but never used.","'selectedFiles' is assigned a value but never used.","'progressInfos' is assigned a value but never used.","'message' is assigned a value but never used."]